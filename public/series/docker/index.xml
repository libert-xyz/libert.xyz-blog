<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on libert.xyz</title>
    <link>https://libert.xyz/series/docker/</link>
    <description>Recent content in docker on libert.xyz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 12 Jun 2019 15:12:45 -0400</lastBuildDate>
    
	<atom:link href="https://libert.xyz/series/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RUN or CMD or ENTRYPOINT</title>
      <link>https://libert.xyz/posts/run-cmd-entrypoint/</link>
      <pubDate>Wed, 12 Jun 2019 15:12:45 -0400</pubDate>
      
      <guid>https://libert.xyz/posts/run-cmd-entrypoint/</guid>
      <description>One of the most confusing parts of a Dockerfile for me it has always been the part where we execute or initiate the application.
In Summary  RUN executes command(s) in a new layer on top of the current image. Often used to install packages and dependencies.
 CMD sets default command and/or parameters, can be overwritten from the command line when docker container runs.
 ENTRYPOINT Allows you to configure a container to run as an executable.</description>
    </item>
    
    <item>
      <title>Containers &amp; Docker Images</title>
      <link>https://libert.xyz/posts/containers-docker/</link>
      <pubDate>Sat, 10 Nov 2018 14:53:00 -0400</pubDate>
      
      <guid>https://libert.xyz/posts/containers-docker/</guid>
      <description>Containers are getting more popular year by year and more companies are adopting containers as their default development environment.
One of the primary reasons for the rapid adoption are the flexibility to package the application code, share it and running anywhere regardless of the operating system host. Another reason is the mass adoption of Microservices Architectures.
A Hello World container The busybox images contain the basic UNIX tools like echo, ls and so on.</description>
    </item>
    
  </channel>
</rss>