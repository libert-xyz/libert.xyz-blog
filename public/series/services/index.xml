<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>services on libert.xyz</title>
    <link>https://libert.xyz/series/services/</link>
    <description>Recent content in services on libert.xyz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 09 Apr 2021 13:23:38 -0400</lastBuildDate>
    
	<atom:link href="https://libert.xyz/series/services/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubernetes Services insights Pt2</title>
      <link>https://libert.xyz/posts/pod-services-pt2/</link>
      <pubDate>Fri, 09 Apr 2021 13:23:38 -0400</pubDate>
      
      <guid>https://libert.xyz/posts/pod-services-pt2/</guid>
      <description>In the first part we discussed pods communication through Kubernetes services, all of this internally in the cluster, but what if we need to expose the service to the internet?
Exposing services to the internet Node Port
The service type NodePort creates a unique port in every node of the cluster and forwards the requests to the pods that are part of that service.
apiVersion:v1kind:Servicemetadata:name:example-nodeportspec:type:NodePort❶ports:-port:80❷targetPort:80❸nodePort:30021❹selector:app:example ❶ Set the service type to NodePort.</description>
    </item>
    
    <item>
      <title>Kubernetes Services insights</title>
      <link>https://libert.xyz/posts/pod-services/</link>
      <pubDate>Wed, 05 Jun 2019 14:53:00 -0400</pubDate>
      
      <guid>https://libert.xyz/posts/pod-services/</guid>
      <description>Services introduction A Kubernetes service provides a static endpoint (IP) to access pods. The IP is static and never changes while the service exists. Services can have multiple pods in different nodes, in every request the service routes the traffic to a random backed pod even if the request comes from the same client.
Kubernetes Services The kube-proxy manages everything related to services.
In summary, a service has the following characteristics</description>
    </item>
    
  </channel>
</rss>